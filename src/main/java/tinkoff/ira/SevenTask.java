package tinkoff.ira;

import java.util.Scanner;

public class SevenTask {

  private static final int MOD = 998244353;

  public static void main(String[] args) {
    try (Scanner scanner = new Scanner(System.in)) {
      int n = scanner.nextInt();
      int k = scanner.nextInt();
      int[] a = new int[n];

      for (int i = 0; i < n; i++) {
        a[i] = scanner.nextInt();
      }

      for (int p = 1; p <= k; p++) {
        long sum = 0;
        for (int i = 0; i < n; i++) {
          for (int j = i + 1; j < n; j++) {
            long pairSum = a[i] + a[j];
            long poweredSum = modPow(pairSum, p);
            sum = (sum + poweredSum) % MOD;
          }
        }
        System.out.println(sum);
      }
    }
  }

  private static long modPow(long base, int exp) {
    long result = 1;
    while (exp > 0) {
      if ((exp & 1) == 1) {
        result = (result * base) % SevenTask.MOD;
      }
      base = (base * base) % SevenTask.MOD;
      exp >>= 1;
    }
    return result;
  }

}

//Согласно законам неизвестного государства Т каждый совершеннолетний гражданин должен уметь складывать и умножать числа.
//Дан массив а1, а2,...., an• Для каждого р от 1 до k рассмотрим следующий процесс:
//1)для всех i,j таких, что 1 <= і < j <= n выпишем пары (ai, aj)
//2)в полученной последовательности каждую пару заменим на сумму ее элементов
//3)в очередной последовательности каждый элемент возведем в p-ю степень
//4)сложим все числа итоговой последовательности
//5)заменим значение на его остаток при делении на 998244353
//Обозначим результат за f(p). Найдите значения f(1), f(2)...,f(k).
//Формат входных данных
//Первая строка содержит числа п (2 <= n <= 200000) и k (1 <= k <= 300).
//Вторая строка содержит числа a1, a2, ..., an (1 <= ai <= 100000000).
//Формат выходных данных
//Выведите f(1), f(2)... f(k), каждое в новой строке.
//Комментарий к примеру
//Значение f(2) было получено следующим образом:
//после выписывания пар получается последовательность (2, 3), (2, 4), (3, 4);
//после замены каждой пары на сумму элементов получается набор значений 5, 6, 7;
//после возведения в квадрат получаются числа 25, 36, 49;
//сумма полученных значений равняется 110;
//остаток при делении 110 на 998244353 равняется 110.
